最近在做UDP方式的C/S形式通讯，经测试局域网内可以发送和接收数据包。但当把服务端放到公网服务器后，出现只能发送(Client-->Server)，无法接收(Server-->Cient)的情况。

去CSDN转了转，到处都是UDP的打洞什么的。但仔细想想，这只是CtoS的通讯，又不涉及P2P，应该完全不需要打洞的呀。又有人说需要在路由器做端口映射，问题是QQ这奇葩的UDP变种P2P通讯都没有做端口映射的。而且打洞也需要向服务器发送公网ip和经过路由器nat转换后的端口号，由此可知，Client和Server应该是可以双向通信的。最后找到问题原因是Server端发送数据包时，nodejs新创建了一个socket。UDP虽然面向无连接，但还是有虚拟连接的，一旦新启用socket，就无法使用Client-->Server的虚连接进行数据发送。Server端使用原有socket发送数据，测试可以收到。

最后总结如下：

其实公私网之间UDP传输根本不需要什么端口映射，也不需要配置路由器什么的，就好像QQ、迅雷或者其他一些视频、语音传输软件一样，本地接收端口可以而且应该为随机端口。
实现过程其实很简单，大概是：私网都是客户端，在做完初始化工作后（创建socket、绑定本地端口），要向公网指定UDP端口注册（姑且认为是注册或者 报到吧，反正要发点东西，让服务器知道你的存在），公网根据发来的注册信息，解析出客户端的IP和端口，注意，关键就是这里的端口，并不是私网绑定时的端 口号，而是经过一系列路由后的端口号，只要公网给这个IP和端口发数据，又反向经过一系列路由到达私网客户端，在整个过程中，不必关心中间过程的IP和端 口号变化，总之一句话：公网收到哪个IP和端口的数据，就给该IP和端口发数据就对了。
使用注意事项：
1、这种公私网之间的UDP通信，一般都伴有TCP连接，靠TCP来注册和发送控制命令，UDP传输数据
2、公私网之间的路由一旦建立，就需要心跳来维持，否则路由器在指定时间会断掉无数据收发的路由，时间一般几分钟到十几分钟不等。
